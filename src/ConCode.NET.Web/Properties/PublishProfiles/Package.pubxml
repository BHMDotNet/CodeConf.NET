<?xml version="1.0" encoding="utf-8"?>
<!--
This file is used by the publish/package process of your Web project. You can customize the behavior of this process
by editing this MSBuild file. In order to learn more about this please visit http://go.microsoft.com/fwlink/?LinkID=208121. 
-->
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <WebPublishMethod>Package</WebPublishMethod>
    <ExcludeApp_Data>False</ExcludeApp_Data>
    <PublishFramework />
    <UsePowerShell>True</UsePowerShell>
    <EnableMSDeployAppOffline>True</EnableMSDeployAppOffline>
    <MSDeployServiceURL>dev-concodenet.scm.azurewebsites.net:443</MSDeployServiceURL>
    <DeployIisAppPath>dev-concodenet</DeployIisAppPath>
    <RemoteSitePhysicalPath />
    <SkipExtraFilesOnServer>True</SkipExtraFilesOnServer>
    <MSDeployPublishMethod>WMSVC</MSDeployPublishMethod>
    <EnableMSDeployBackup>True</EnableMSDeployBackup>
    <UserName>$dev-concodenet</UserName>
    <_SavePWD>True</_SavePWD>
    <_DestinationType>AzureWebSite</_DestinationType>
    <!--<DesktopBuildPackageLocation>$(OutDir)/$(Configuration)/package/$(MSBuildProjectName).zip</DesktopBuildPackageLocation>
    <Replacements>@(@{'file'='appsettings.json$';'match'='(?&lt;="ConCode":.*")[^"]*';'newValue'='testingParam'})</Replacements>-->
  </PropertyGroup>

  <Import Project="$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v14.0\Web\Microsoft.Web.Publishing.targets"/>
  <PropertyGroup>
    <GatherAllFilesToPublishDependsOn>
      $(GatherAllFilesToPublishDependsOn);
      GetMSDeployInstalledVersionPath;
      CreateMSDeployPackageFromDotNetPublishFiles
    </GatherAllFilesToPublishDependsOn>
    <PackageTempPath>$([System.IO.Path]::GetTempPath())PackageTemp\$(MSBuildProjectName)\</PackageTempPath>
    <PackageSourceManifest>$(PackageTempPath)$(MSBuildProjectName).SourceManifest.xml</PackageSourceManifest>
    <PackageDestinationManifest>$(PackageTempPath)$(MSBuildProjectName).DestManifest.xml</PackageDestinationManifest>
    <PackageFile>$(PackageTempPath)$(MSBuildProjectName).package.zip</PackageFile>
    <DeployFolder>$(MSBuildProjectDirectory)/Deploy/</DeployFolder>
    <DeclareParamFile>$(DeployFolder)parameters.xml</DeclareParamFile>
  </PropertyGroup>
  <Target Name="CreateMSDeployPackageFromDotNetPublishFiles">
    <Message Text="PublishOutputPath=$(PublishOutputPath)" Importance="high"/>
    <Message Text="PackageTempPath=$(PackageTempPath)" Importance="high"/>
    <Message Text="GetMSDeployOutputs=@(GetMSDeployOutputs)" />
    <Message Text="MSDeployPath=$(MSDeployPath)" />
    <RemoveDir Directories="$(PackageTempPath)"/>
    <MakeDir Directories="$(PackageTempPath)"/>
    <ItemGroup>
      <MsDeploySourceManifest Include="IisApp">
        <Path>$(PublishOutputPath)</Path>
        <!--<managedRuntimeVersion>$(_DeployManagedRuntimeVersion)</managedRuntimeVersion>
        <enable32bitAppOnWin64>$(DeployEnable32bitAppOnWin64)</enable32bitAppOnWin64>
        <managedPipelineMode>$(DeployManagedPipelineMode)</managedPipelineMode>
        <AdditionalProviderSettings>managedRuntimeVersion;enable32bitAppOnWin64;managedPipelineMode</AdditionalProviderSettings>-->
      </MsDeploySourceManifest>
      <MsDeployDestinationManifest Include="IisApp">
        <Path>Default Web Site\$(MSBuildProjectName)_Deploy</Path>
        <!--<managedRuntimeVersion>$(_DeployManagedRuntimeVersion)</managedRuntimeVersion>
        <enable32bitAppOnWin64>$(DeployEnable32bitAppOnWin64)</enable32bitAppOnWin64>
        <managedPipelineMode>$(DeployManagedPipelineMode)</managedPipelineMode>
        <AdditionalProviderSettings>managedRuntimeVersion;enable32bitAppOnWin64;managedPipelineMode</AdditionalProviderSettings>-->
      </MsDeployDestinationManifest>

      <!--<MsDeploySourceManifest Include="contentPath">
        <Path>$(PublishOutputPath)</Path>
      </MsDeploySourceManifest>-->
      <MsDeploySourceProviderSetting>
        <Path>manifest=$(PackageSourceManifest)</Path>      
      </MsDeploySourceProviderSetting>
      <MsDeployDestinationProviderSetting>
        <Path>package=$(PackageFile)</Path>
      </MsDeployDestinationProviderSetting>
    </ItemGroup>
    <ExportManifestFile Manifests="@(MsDeploySourceManifest)" ManifestFile="$(PackageSourceManifest)" />
    <ExportManifestFile Manifests="@(MsDeployDestinationManifest)" ManifestFile="$(PackageDestinationManifest)" />

    <PropertyGroup>
      <MSDeployArgs Condition="Exists($(DeclareParamFile))">-declareParamFile=&quot;$(DeclareParamFile)&quot; </MSDeployArgs>
    </PropertyGroup>

    <Message Text="MSDeployArgs=$(MSDeployArgs)" Importance="high"/>

    <Exec Command="&quot;$(MSDeployPath)\MSDeploy.exe&quot; -verb:sync -source:manifest=&quot;$(PackageSourceManifest)&quot; -dest:package=&quot;$(PackageFile)&quot; $(MSDeployArgs)" />
    <ItemGroup>
      <PackageFiles Include="$(PackageTempPath)\*" />
      <PackageFiles Include="$(DeployFolder)\**\SetParam*" />
    </ItemGroup>
    <Copy SourceFiles="@(PackageFiles)" DestinationFolder="$(OutDir)\$(Configuration)\package" />

    <!--<MSdeploy
      Verb="sync"
      Source="@(MsDeploySourceProviderSetting)"
      Destination="@(MsDeployDestinationProviderSetting)"
      ExePath="$(MSDeployPath)" />-->
      <!--DeclareParameterItems="@(_Package_MsDeployDeclareParameters)"
      OptimisticParameterDefaultValue="$(EnableOptimisticParameterDefaultValue)"
      ImportDeclareParametersItems="$(_VsPackageParametersFile)"
      ReplaceRuleItems="@(MsDeployReplaceRules)"
      RetryAttempts="$(RetryAttemptsForDeployment)" />-->
  </Target>
</Project>